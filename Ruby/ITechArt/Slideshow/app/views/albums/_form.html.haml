= form_for @album, :html => {:multipart => true} do |f|
  .form-group
    = f.label :title, :class => 'control-label '
    = f.text_field :title, :class => 'text_field form-control', :placeholder => 'Your album title'
  .form-group
    = f.label :description, :class => 'control-label'
    = f.text_field :description, :class => 'text_field form-control', :placeholder => 'Your album description'
  .form-group
    = f.label :visibility
    = f.collection_select :visibility, Album::VISIBILITY, :to_s, lambda{|i| i.to_s.humanize}, :class => 'form-control'
  .form-group
    %p
      %b Category
      = f.collection_select :category_id, Category.all, :id, :category_title, :prompt => "Select one", :class => 'form-control'
  .form-group
    %p
      %b Tags
      =f.text_field :tag_list, :class => 'form-control', :placeholder => 'Your tag list'
    %p
      -@album.tags.each do |tag|
        = link_to tag.name, tag_path(tag), :class => 'btn btn-default'
        %p
  %p
    %b Photos
  %p
    There are #{@album.photos.count} photos.
  - @album.photos.each do |photo|
    .photo
      = link_to image_tag(photo.image.thumb.url), photo
      %p
        = link_to 'Destroy', photo, :remote=>true, :method => :delete, :class => 'btn btn-link'
  %p
    %b Add Photo
  = file_field_tag "images[]", type: :file, multiple: true,  :class => "btn btn-default"
  - if @album.errors.any?
    #error_explanation
      %h2= "#{pluralize(@album.errors.count, "error")} prohibited this album from being saved:"
      %ul
        - @album.errors.full_messages.each do |msg|
          %li= msg

  .actions
    = f.submit 'Save', :class => "btn btn-primary"

  = javascript_include_tag 'specific/albums/_form'

